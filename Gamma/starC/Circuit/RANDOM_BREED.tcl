    *c "ClientData CD;"
    *c "int i,j;"
    *c "PAT *p=(PAT *)&@$::opt(topology):circuits:PAT;"
    *c "long int r;"
    *c "float step;"
    *c "while (1) \{"
    *c "    if (p->content->num_of>@$::opt(topology):config:pat_size_target) break;"
    *c "int sweep_size=p->content->num_of;"
    *c "for (i=0;i<sweep_size;i++) \{"
    if {$::debug_mode} {*c "printf(\"Visiting %d\\n\",i);"}
    set j 0
    @ $::opt(topology):size foreach_child s {
        *c "@$::opt(topology):size:$s=p->content->content[i]->sizes->content[$j];"
        incr j;
    }
    foreach s $::sizers_list {
        *c "while (1) \{"
        *c "step=(2.0*random()/RAND_MAX-1)*$::sizing_code($s,step);"
        *c "if (@$::opt(topology):size:$s+step<$::sizing_code($s,min)) continue;"
        *c "if (@$::opt(topology):size:$s+step>$::sizing_code($s,max)) continue;"
        *c "break;"
        *c "\}"
        *c "@$::opt(topology):size:$s+=step;"
    }
    *c "int pre_volume=p->content->num_of;"
    *c "if (tcl_gamma_${::opt(topology)}_op_cmd(CD,NULL,0,NULL)==TCL_ERROR) \{i--; continue;\}"
    *c "if (pre_volume==p->content->num_of) \{i--; continue;\}"
    *c "if (p->content->num_of%1000==0) \{"
    *c "    printf(\"               %ld/%g=%g%% max gain=%g\\n\",p->content->num_of,@$::opt(topology):config:pat_size_target,100*p->content->num_of/@$::opt(topology):config:pat_size_target,@$::opt(topology):max_Adc);"
    *c "    printf(\"               %ld/%g=%g%%\\n\",p->content->num_of,@$::opt(topology):config:pat_size_target,100*p->content->num_of/@$::opt(topology):config:pat_size_target);"
    *c "    fflush(stdout);"
    *c "    if (@$::opt(topology):param:unique>0) \{"
    *c "        pat_unique(p,@$::opt(topology):param:unique);"
    *c "    printf(\"               post unique: %ld/%g=%g%%\\n\",p->content->num_of,@$::opt(topology):config:pat_size_target,100*p->content->num_of/@$::opt(topology):config:pat_size_target);"
    *c "    if (p->content->num_of>0.92*@$::opt(topology):config:pat_size_target) break;"
    *c "\}"
    *c "\}"
    *c "    if (p->content->num_of>@$::opt(topology):config:pat_size_target) break;"
    *c "\}"
    *c "    if (p->content->num_of>@$::opt(topology):config:pat_size_target) break;"
    *c "\}"
